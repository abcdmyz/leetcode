/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> preorderTraversal(TreeNode *root) 
    {
        stack<TreeNode*> nodeStack;
        vector<int> order;
        
        if (root == NULL)
        {
            return order;
        }
        
        nodeStack.push(root);
        
        while (!nodeStack.empty())
        {
            TreeNode *tmpNode = nodeStack.top();
            nodeStack.pop();
            
            order.push_back(tmpNode->val);
            
            if (tmpNode->right != NULL)
            {
                nodeStack.push(tmpNode->right);
            }
            if (tmpNode->left != NULL)
            {
                nodeStack.push(tmpNode->left);
            }
        }
        
        return order;
        
    }
};
