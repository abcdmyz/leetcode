class Solution {
public:
    int longestValidParentheses(string s) 
    {
        stack<int> par;
        int res = 0;
        int last = -1;
        
        for (int i = 0; i < s.length(); i++)
        {
            if (s[i] == '(')
            {
                par.push(i);
            }
            else
            {
                if (par.empty())
                {
                    last = i;
                }
                else
                {
                    par.pop();
                    
                    if (par.empty())
                    {
                        res = max(res, i - last);
                    }
                    else
                    {
                        int top = par.top();
                        res = max(res, i - top);    
                    }
                }
            }
        }
        
        return res;
    }
};
