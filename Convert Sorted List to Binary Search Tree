/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode *insertNode(ListNode *&list, int start, int end)
    {
        if ( start > end )
            return NULL;
        
        int mid = (start + end) / 2;
        
        TreeNode *left_child = insertNode(list, start, mid-1);
        TreeNode *parent = new TreeNode(list->val);
        parent->left = left_child;
        list = list->next;
        parent->right = insertNode(list, mid+1,end);
        
        return parent;
    }
    TreeNode *sortedListToBST(ListNode *head) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int size = 0;
        ListNode *tmp = head;
        while (tmp != NULL)
        {
            size++;
            tmp = tmp->next;
        }
        
        insertNode(head, 0, size-1);
    }
};
