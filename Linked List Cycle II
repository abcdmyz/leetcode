/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *head) 
    {

    }
    
    ListNode *detectCycle(ListNode *head) 
    {
        if (head == NULL)
        {
            return NULL;
        }
        
        ListNode *l1 = head;
        ListNode *l2 = head;
        
        while (l2 != NULL && l2->next != NULL)
        {
            l1 = l1->next;
            l2 = l2->next->next;
            
            if (l1 == l2)
            {
                break;
            }
        }
        
        if (l2 == NULL || l2->next == NULL)
        {
            return NULL;
        }
        
        l1 = head;
        
        while (l1 != l2)
        {
            l1 = l1->next;
            l2 = l2->next;
        }
        
        return l1;
    }
};
