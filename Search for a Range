class Solution {
public:
    vector<int> searchRange(int A[], int n, int target) 
    {
        int head = 0;
        int tail = n - 1;
        vector<int> result;
        
        while (head < tail)
        {
            int mid = head + ((tail - head) / 2);
            
            if (target <= A[mid])
            {
                tail = mid;
            }
            else
            {
                head = mid + 1;
            }
        }
        
        if (A[head] != target)
        {
            result.push_back(-1);
            result.push_back(-1);
                
            return result;
        }
            
        result.push_back(head);
        
        
        if (A[head + 1] != target)
        {
            result.push_back(head);
            return result;
        }
        
        head = 0;
        tail = n - 1;
        
        while (head < tail)
        {
            int mid = head + ((tail - head) / 2);
            
            if (target > A[mid])
            {
                head = mid + 1;
            }
            else if (target == A[mid])
            {
                if (A[mid + 1] == A[mid])
                {
                    head = mid + 1;
                }
                else
                {
                    tail = mid;
                    break;
                }
            }
            else
            {
                tail = mid - 1;
            }
        }    
        
        result.push_back(tail);
        
        
        return result;
    }
};
