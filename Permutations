class Solution {
public:
    void DFS(vector<int> &num, vector<bool> &flag, vector<int> &cur, vector<vector<int>> &ans, int k)
    {
        if (k>=num.size())
        {
            ans.push_back(cur);
            return;
        }
        
        for (int i=0; i<num.size(); i++)
        {
            if (flag[i] == true)
            {
                continue;
            }
            
            cur[k] = num[i];
            flag[i] = true;
            DFS(num, flag, cur, ans, k+1);
            flag[i] = false;
        }
    }
    
    vector<vector<int> > permute(vector<int> &num) {
        // Note: The Solution object is instantiated only once and is reused by each test case.
        vector<vector<int>> ans;
        vector<bool> flag(num.size(), false);
        vector<int> cur(num.size(),0);
        
        DFS(num, flag, cur, ans, 0);
        
        return ans;
    }
};
