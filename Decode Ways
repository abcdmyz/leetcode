class Solution {
public:
    int changeStringToNum(string s, int pos)
    {
        return (s[pos]-'0')*10 + (s[pos+1]-'0');
    }
    
    int numDecodings(string s) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        
        if (s.length()==0)
            return 0;
        if (s.length()==1 && s[0]!='0')
            return 1;
        
        if (s[0]=='0')
            return 0;
        
        int dp[3000];
        memset(dp, 0, sizeof(dp));
        
        int k=0;

        dp[k] = 1;
        int temp = changeStringToNum(s,k);
        if (temp<=26 && temp!=10 && temp!=20)
        {
            dp[k+1] = 2;
        }
        else if ((temp>26 && s[k+1]!='0') || (temp==10) ||(temp==20))
        {
            dp[k+1] = 1;
        }
        else
        {
            return 0;
        }
        
        for (int i=k+2; i<s.length(); i++)
        {
            if (s[i]=='0' && s[i-1]=='0')
            {
                return 0;
            }
            if (s[i]!='0')
            {
                dp[i] = dp[i-1];
            }
                                
            if (s[i-1]!='0' && changeStringToNum(s, i-1) <=26)
            {
                dp[i] += dp[i-2];
            }
            if (s[i]=='0' && s[i-1]>='3')
            {
                return 0;
            }
            if (s[i]=='0')
            {
                dp[i]=dp[i-2];
            }
        }
        
        return dp[s.length()-1];
    }
};
